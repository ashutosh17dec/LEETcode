"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, neighbors):
        self.val = val
        self.neighbors = neighbors
"""
class Clone:
    def __init__(self,x):
        self.val = x
        self.neighbors = []
        
class Solution(object):
    
    def cloneGraph(self, node):
        queue = []
        graph = {}
        newnode = Clone(node.val)
        graph[node] = newnode
        queue.append(node)
        while queue:
            s = queue.pop(0)
            for neighbor in s.neighbors:
                if neighbor not in graph:
                    new = Clone(neighbor.val)
                    graph[s].neighbors.append(new)
                    graph[neighbor] = new
                    queue.append(neighbor)
                else:
                    graph[s].neighbors.append(graph[neighbor])
        return newnode
